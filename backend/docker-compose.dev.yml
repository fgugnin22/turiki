version: "3.1"

services:
  django:
    image: backend
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    restart: unless-stopped
    command: sh -c "mkdir -p /usr/src/app/turiki_app/migrations && touch /usr/src/app/turiki_app/migrations/__init__.py && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      pgdb:
        condition: service_started
        restart: true
      redis:
        condition: service_started
        restart: true
      dramatiq:
        condition: service_started
        restart: true
  dramatiq:
    image: backend
    restart: unless-stopped
    command: sh -c "python manage.py rundramatiq --processes 4 --threads 4"
    volumes:
      - .:/usr/src/app
    depends_on:
      redis:
        condition: service_started
        restart: true
  redis:
    restart: unless-stopped
    image: redis:5
    ports:
      - "6379:6379"
  pgdb:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=$PG_PASSWORD
      - POSTGRES_USER=$PG_USER
      - POSTGRES_DB=TurikiCore
    container_name: pgdb
    restart: unless-stopped
    ports:
      - "5431:5431"
